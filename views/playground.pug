extends layout/layout.pug

block script
  link(rel='stylesheet' href='/xterm/xterm.css')
  link(rel='stylesheet' href='/codemirror/lib/codemirror.css')
  link(rel='stylesheet' href='/codemirror/addon/selection/active-line.js')
  link(rel='stylesheet' href='/codemirror/theme/blackboard.css')
  link(rel='stylesheet' href='/codemirror/theme/seti.css')
  link(rel='stylesheet' href='/codemirror/theme/material.css')
block content

    .ui.basic.modal#selectRole-modal
      .ui.icon.header
        i.users.icon
        |     Please Select Your Role
      .content
        .actions
          center
            .ui.blue.massive.inverted.positive.button
              i.keyboard.icon
              |       Coder
            .ui.green.massive.inverted.negative.button
              i.unhide.icon
              |       Reviewer
    .ui.modal
    .ui.reviewer.small.modal
      .header Code Review
      .content
        .ui.form
          .field
            label Line No :
            |  
            input.disabled.line.no(type='text' placeholder='Your Project Name', disabled='')
          .field
            label Comment :
            |  
            textarea.line.reviewer.description(rows='4' cols='50' placeholder='Something about this line')
          .ui.basic.center.aligned.segment()
            .actions
              button.ui.button.approve.green(onClick='submitReview()') Submit
              .ui.button.approve.red(data-value='cancel') Cancel
    .ui.coder.small.modal
      .header Review Description
      .content
        .ui.form
          .field
            label Line No :
            |  
            input.disabled.line.no(type='text' placeholder='Line number', disabled='')
          .field
            label Comment :
            textarea.coder.disabled.line.description(rows='4' cols='50' placeholder='Something about this line', disabled='')
          .ui.basic.center.aligned.segment()
            .actions
              .ui.button.approve.red(data-value='cancel') Close

    .ui.container.segment
      .ui.grid
        .four.wide.column
          h1.ui.header= project.title
          p= project.description
        .seven.wide.column
          center
            #swapTimer(style='margin: 0 0 10 0')
              <strong>Auto Swapping Role In: </strong>
              span.time
                    .countdown
              |  minutes
              - let partner = user.username === project.creator ? project.collaborator : project.creator
              - let curUser = user.username === project.creator ? project.creator : project.collaborator
            .user.status
              span.user.status!= `<strong><em><i class='grey circle icon'></i>${partner}</em></strong>`
        .five.wide.column.right
          center
            button.ui.primary.labeled.icon.button(onClick='switchRole()')
              i.refresh.icon
              |  Switch Role
            |  
            button.ui.positive.labeled.icon.button(id='run' onClick='runCode()')
              i.terminal.icon
              |  Run
            button.ui.positive.labeled.icon.button(id='run' onClick='submitCode()')
              i.code.icon
              |  Submit
      .ui.divider
      br
      .ui.grid
        .four.wide.column
          .ui.top.attached.tabular.demo.menu
            a.active.item(data-tab='first') Project
            |  
            a.item(data-tab='second') Setting
            .right.menu
              .item
          .ui.bottom.attached.active.tab.segment(data-tab='first')
            p
              .ui.list
                .item
                  i.folder.icon
                  .content
                    .header src
                    .description Source files for project
                    .list
                      .item
                        i.arrow.right.icon
                        i.file.icon
                        .content
                          .header main.py
                          .description Main python file
                .item
                  i.folder.icon
                  .content
                    .header test
                    .description Unit testing files
                    .list
                      .item
                        i.arrow.right.icon
                        i.folder.icon
                        .content
                          .header test_main.py
                          .description Unit testing for test_main
                .item
                  i.file.icon
                  .content
                    .header project_information.json
                    .description Project information
          .ui.bottom.attached.tab.segment(data-tab='second')
            .ui.toggle.lightmodetoggle.checkbox
              input(type='checkbox',onChange='changeTheme()')#lightmodetoggle
              label Enable Light Mode 
          .ui.segments
            .ui.segment
              p Video Chat 
                button.ui.mute.toggle.button.active(onClick='muteEvent(this)')
                  i.unmute.icon
                button.ui.video.toggle.button.active(onClick='videoEvent(this)')
                  i.video.play.icon
            .ui.secondary.segment
              style.
                .videoContainer {
                position: relative;
                width: 200px;
                height: 150px;
                }
                .videoContainer video {
                position: absolute;
                width: 100%;
                height: 100%;
                }
                .volume_bar {
                position: absolute;
                width: 5px;
                height: 0px;
                right: 0px;
                bottom: 0px;
                background-color: #12acef;
                }
              p#subTitle
              form#createRoom
              p You
              .videoContainer
                video#localVideo(style='height: 150px;', oncontextmenu='return false;')
                #localVolume.volume_bar
              p Buddy
              #remotes
        .eight.wide.column.right
          .ui.form
              textarea#demotext.show
          .ui.segments
            .ui.segment
              p Terminal
            .ui.secondary.segment
              #xterm-container
        .four.wide.column.right
          .ui.raised.segments
            .ui.segment Chat
            .ui.secondary.segment
              .ui.items
                .ui.item
                  a.ui.avatar.image
                    img(src='https://cdn0.iconfinder.com/data/icons/pokemon-go-vol-2/135/_Pokemon_Egg-128.png')
                  .content
                    //- a.header Thara
                  .description Hi
                .ui.item
                  a.ui.avatar.image
                    img(src='https://cdn0.iconfinder.com/data/icons/pokemon-go-vol-2/135/_Pokemon_Egg-128.png')
                  .content
                  .description 
                    .ui.input(type='text', name='message', placeholder='Type here...')
            .ui.segment
                .ui.form(action='/project', method='POST')
                  .field
                    .ui.grid
                      .twelve.wide.column
                        input.ui.input(type='text', id="inputMessage", name='message', placeholder='Type here')
                      .four.wide.column
                        button.ui.button.icon(type='submit', onClick='sendMessage()')
                          i.send.icon
      .ui.grid
        .four.wide.column

        .twelve.wide.column.right

block footerExtend
  script.
    let user="#{user.username}"
    let uid="#{user._id}"
    let partner="#{partner}"
  script(type='text/javascript').
    $(document).ready(function(){
        $('.demo.menu .item').tab({history:false});
    });
  script(src='/codemirror/lib/codemirror.js')
  script(src='/codemirror/mode/python/python.js')
  script(src='/js/static/simplewebrtc.bundle.js')
  script(src='/js/static/webrtc.js')
  script(src='/js/static/socket.io.min.js')
  script(src='/xterm/xterm.js')
  script(src='/xterm/addons/fit/fit.js')
  script(src='/js/static/countdown.min.js')
  script(src='/js/app/playground.js')