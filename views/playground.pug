extends layout/layout.pug

block script
  link(rel='stylesheet' href='/css/main.css')
  link(rel='stylesheet' href='/xterm/xterm.css')
  link(rel='stylesheet' href='/codemirror/lib/codemirror.css')
  link(rel='stylesheet' href='/codemirror/addon/selection/active-line.js')
  link(rel='stylesheet' href='/codemirror/theme/blackboard.css')
  link(rel='stylesheet' href='/codemirror/theme/seti.css')
  link(rel='stylesheet' href='/codemirror/theme/material.css')
block content
    //- select role modal
    .ui.basic.modal#selectRole-modal
      .ui.icon.header
        i.users.icon
        |     Please Select Your Role
      .content
        .actions
          center
            .ui.blue.massive.inverted.positive.button
              i.keyboard.icon
              |       Coder
            .ui.green.massive.inverted.negative.button
              i.unhide.icon
              |       Reviewer
    //- show score modal
    .ui.basic.modal#showScore-modal
      .ui.icon.header
        i.student.icon
        p#show-point
        |       Summary
        p#show-avg-point
      .content
        .actions
          center
            .ui.blue.massive.inverted.positive.button
              i.remove.icon
              |       Close
    .ui.modal
    .ui.reviewer.small.modal
      .header Code Review
      .content
        .ui.form
          .field
            label Line No :
            |  
            input.disabled.line.no(type='text' placeholder='Your Project Name', disabled='')
          .field
            label Comment :
            |  
            textarea.line.reviewer.description(rows='4' cols='50' placeholder='Something about this line')
          .ui.basic.center.aligned.segment()
            .actions
              button.ui.button.approve.green(onClick='submitReview()') Submit
              .ui.button.approve.red(data-value='cancel') Cancel
              .ui.floated.alignedvertical.animated.deleteProject.button.approve(onClick='deleteReview()' tabindex='0')
                        .hidden.content Delete
                        .visible.content
                          i.trash.icon
    .ui.coder.small.modal
      .header Review Description
      .content
        .ui.form
          .field
            label Line No :
            |  
            input.disabled.line.no(type='text' placeholder='Line number', disabled='')
          .field
            label Comment :
            textarea.coder.disabled.line.description(rows='4' cols='50' placeholder='Something about this line', disabled='')
          .ui.basic.center.aligned.segment()
            .actions
              .ui.button.approve.red(data-value='cancel') Close

    .ui.container.segment
      .ui.grid
        .four.wide.column
          h1.ui.header= project.title
          p= project.description
        .five.wide.column
          center
            #swapTimer(style='margin: 0 0 10 0')
              <strong>Auto Swapping Role In: </strong>
              span.time
                    .countdown
              |  minutes
              //- - let partner_obj = partner_obj
              //- - if partner_obj is null
              - let partner_img = partner_obj === null ? '/images/user_img_' + Math.floor((Math.random() * 7) + 0) + '.jpg' : partner_obj.img
              - while (partner_img == user.img) {partner_img = '/images/user_img_' + Math.floor((Math.random() * 7) + 0) + '.jpg'}
              - let partner = user.username === project.creator ? project.collaborator : project.creator
              - let curUser = user.username === project.creator ? project.creator : project.collaborator
            .user.status
              span.user.status!= `<strong><em><i class='grey circle icon'></i>${partner}</em></strong>`
        .seven.wide.column.right
          center
            button.ui.primary.labeled.icon.button(onClick='switchRole()')
              i.refresh.icon
              |  Switch Role
            |  
            button.ui.positive.labeled.icon.button(id='run' onClick='runCode()')
              i.terminal.icon
              |  Run
            button.ui.labeled.icon.button.orange(id='run' onClick='submitCode()')
              i.code.icon
              |  Verify
      .ui.divider
      //- new
      //- .ui.grid
      //-   .sixteen.wide.column
      //-     center
      //-       h1.ui.header= project.title
      //- .ui.dividerss
      .ui.grid
        .six.wide.column
          .ui.grid
            .sixteen.wide.column.padding-left-20.padding-right-20
              div.ui.relaxed.items
                div.item
                  div
                    a.ui.tiny.image.circular
                      img(src=user.img)
                    p.user-role-label.text-center
                  div.content.padding-10
                    p.header #{user.info.firstname}   #{user.info.lastname} <b> (@#{user.username}) </b>
                    div.description
                      a.ui.teal.circular.label#user-point-label
        .four.wide.column
          center
            h1.ui.header= project.title
            #swapTimer(style='margin: 0 0 10 0')
              //- <strong>Auto Swapping Role In: </strong>
              span.time
                .countdown
                .auto-swap-warning
              div.margin-top-15
                button.ui.primary.labeled.icon.button.margin-top-15(onClick='switchRole()')
                  i.refresh.icon
                  |  Switch Role
              //- - let partner_obj = partner_obj
              //- - if partner_obj is null
              //- - let partner_img = partner_obj === null ? '/images/user_img_' + Math.floor((Math.random() * 7) + 0) + '.jpg' : partner_obj.img
              //- - while (partner_img == user.img) {partner_img = '/images/user_img_' + Math.floor((Math.random() * 7) + 0) + '.jpg'}
              //- - let partner = user.username === project.creator ? project.collaborator : project.creator
              //- - let curUser = user.username === project.creator ? project.creator : project.collaborator
        .six.wide.column
          .ui.grid    
            .sixteen.wide.column.padding-left-20.padding-right-20
              div.ui.relaxed.items
                div.item
                  div
                    a.ui.tiny.image.circular
                      img(src=partner_img)
                    p.partner-role-label.text-center
                  div.content.padding-10
                    p.header #{partner_obj.info.firstname}   #{partner_obj.info.lastname} <b> (@#{partner_obj.username}) </b>
                      span.user.status
                    div.description
                      a.ui.teal.circular.label#partner-point-label
      .ui.divider
      br
      .ui.grid
        .four.wide.column
          .ui.top.attached.tabular.demo.menu
            a.active.item(data-tab='first') Project
            |  
            a.item(data-tab='second') Setting
            .right.menu
              .item
          .ui.bottom.attached.active.tab.segment(data-tab='first')
            p
              .ui.list
                .item
                  i.folder.icon
                  .content
                    .header src
                    .description Source files for project
                    .list
                      .item
                        i.arrow.right.icon
                        i.file.icon
                        .content
                          .header main.py
                          .description Main python file
                .item
                  i.folder.icon
                  .content
                    .header test
                    .description Unit testing files
                    .list
                      .item
                        i.arrow.right.icon
                        i.folder.icon
                        .content
                          .header test_main.py
                          .description Unit testing for test_main
                .item
                  i.file.icon
                  .content
                    .header project_information.json
                    .description Project information
          .ui.bottom.attached.tab.segment(data-tab='second')
            .ui.toggle.lightmodetoggle.checkbox
              input(type='checkbox',onChange='changeTheme()')#lightmodetoggle
              label Enable Light Mode 
          .ui.segments
            .ui.segment
              p Video Chat 
                button.ui.mute.toggle.button.active(onClick='muteEvent(this)')
                  i.unmute.icon
                button.ui.video.toggle.button.active(onClick='videoEvent(this)')
                  i.video.play.icon
            .ui.secondary.segment
              style.
                .videoContainer {
                position: relative;
                width: 200px;
                height: 150px;
                }
                .videoContainer video {
                position: absolute;
                width: 100%;
                height: 100%;
                }
                .volume_bar {
                position: absolute;
                width: 5px;
                height: 0px;
                right: 0px;
                bottom: 0px;
                background-color: #12acef;
                }
              p#subTitle
              form#createRoom
              p You
              .videoContainer
                video#localVideo(style='height: 150px;', oncontextmenu='return false;')
                canvas(id="canvas" width="320" height="240")
                #localVolume.volume_bar
              p Buddy
              #remotes
        .eight.wide.column.right
          a#project-score-point.ui.red.circular.label score : 0
          a.ui.image.label
            img.ui.avatar.image(src=user.img) 
            | #{user.username}
            .detail#user-point-label 0
          a.ui.image.label
            img.ui.avatar.image(src=partner_img) 
            | #{partner}
            .detail#partner-point-label 0
          .ui.form
              textarea#demotext.show
          .ui.segments
            .ui.segment
              p Terminal
            .ui.secondary.segment
              #xterm-container
        .four.wide.column.right
          .ui.raised.segments
            .ui.segment Chat
            .ui.secondary.segment.chat
              .ui.items.message-list
                if messages.length == 0
                  .ui.item
                  | Send message to your pair.
                else
                  each message in messages
                    .ui.item
                      if (message.uid != user._id)
                        img.ui.avatar.image(src=partner_img)
                      else 
                        img.ui.avatar.image(src=`${user.img}`)
                      .content
                        //- a.header Thara
                      .description.curve-box #{message.message}
            .ui.segment
              p#show-is-typing
                .ui.form(action='/project', method='POST')
                  .field
                    .ui.grid
                      .twelve.wide.column
                        input.ui.input(type='text', id="inputMessage", name='message', placeholder='Type here')
                      .four.wide.column
                        button.ui.button.icon(type='submit', onClick='sendMessage()')
                          i.send.icon
      .ui.grid
        .four.wide.column

        .twelve.wide.column.right
      style.
        .face-tracking {
          width: 320;
          height: 240px;
          position: relative;
          background: #eee;
          overflow: hidden;
        }
        .face-tracking video,canvas {
          position: absolute;
        }
      p(id="mins") 0
      p(id="secs") 0
      p(id="counts") 0

block footerExtend
  script.
    let user="#{user.username}"
    let uid="#{user._id}"
    let partner="#{partner}"
  script(type='text/javascript').
    $(document).ready(function(){
        $('.demo.menu .item').tab({history:false});
    });
  script(src='/codemirror/lib/codemirror.js')
  script(src='/codemirror/mode/python/python.js')
  script(src='/js/static/simplewebrtc.bundle.js')
  script(src='/js/static/webrtc.js')
  script(src='/js/static/socket.io.min.js')
  script(src='/xterm/xterm.js')
  script(src='/xterm/addons/fit/fit.js')
  script(src='/js/static/countdown.min.js')
  script(src='/js/app/playground.js')
  script(src='/js/app/main.js')
  script(src='/trackingjs/build/tracking-min.js')
  script(src='/trackingjs/build/data/face-min.js')